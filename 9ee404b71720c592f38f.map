{"version":3,"sources":["/Users/pshepitchak/WebstormProjects/company-profile-expo/src/components/Image.js","/Users/pshepitchak/WebstormProjects/company-profile-expo/src/components/View.js","/Users/pshepitchak/WebstormProjects/company-profile-expo/src/components/Text.js","/Users/pshepitchak/WebstormProjects/company-profile-expo/src/components/NewsSection/NewsItem.js","/Users/pshepitchak/WebstormProjects/company-profile-expo/src/getNews.js","/Users/pshepitchak/WebstormProjects/company-profile-expo/src/components/NewsSection/useNews.js","/Users/pshepitchak/WebstormProjects/company-profile-expo/src/components/NewsSection/NewsSection.js","/Users/pshepitchak/WebstormProjects/company-profile-expo/src/components/CompanyProfile.js","/Users/pshepitchak/WebstormProjects/company-profile-expo/src/components/TabBar.js","/Users/pshepitchak/WebstormProjects/company-profile-expo/src/App.js","/Users/pshepitchak/WebstormProjects/company-profile-expo/App.js","/Users/pshepitchak/WebstormProjects/company-profile-expo/web-build/register-service-worker.js"],"names":["styled","Image","View","Text","NewsItem","item","style","className","dateToDisplay","Date","publishedAt","toLocaleString","RootView","Platform","OS","decideStylingProp","ThumbnailImage","source","uri","urlToImage","ColumnView","Link","href","url","target","onPress","window","open","Linking","openURL","title","RowView","AuthorText","author","DateText","ST","PropTypes","string","isRequired","propTypes","shape","company","a","async","fetch","response","json","body","articles","useNews","companyName","React","useState","news","setNews","isLoading","setIsLoading","isError","setIsError","useEffect","getNews","result","loadNews","NewsSection","HeaderText","ErrorText","LoaderText","length","map","NewsItemStyled","key","NoNewsText","object","CompanyProfile","profile","logo","name","description","Logo","BodyText","attrs","resizeMode","TabBar","items","onSelect","selected","id","TabItem","isSelected","arrayOf","func","props","companyList","Object","values","companiesData","App","selectedCompany","setSelectedCompany","flex","navigator","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"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","file":"static/js/app.6be14cda.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Image } from 'react-native';\n\nexport default styled(Image)``;\n","import styled from 'styled-components';\nimport { View } from 'react-native';\n\nexport default styled(View)`\n  display: flex;\n`;\n","import styled from 'styled-components';\nimport { Text } from 'react-native';\n\nexport default styled(Text)`\n  \n`\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Linking, Platform } from 'react-native';\nimport PropTypes from 'prop-types';\nimport Image from '../Image';\nimport View from '../View';\nimport Text from '../Text';\n\nconst openLink = url => {\n  if (Platform.OS === 'web') {\n    window.open(url);\n  } else {\n    Linking.openURL(url);\n  }\n};\n\nconst decideStylingProp = ({ style, className }) =>\n  Platform.OS === 'web' ? {className} : {style};\n\nconst NewsItem = ({ item, style, className }) => {\n  const dateToDisplay = new Date(item.publishedAt).toLocaleString();\n\n  return (\n    <RootView {...decideStylingProp({ className, style })}>\n      <ThumbnailImage source={{ uri: item.urlToImage }} />\n      <ColumnView>\n        <Link\n          href={item.url}\n          target=\"_blank\"\n          onPress={() => openLink(item.url)}\n        >\n          {item.title}\n        </Link>\n        <RowView>\n          <AuthorText>{item.author}</AuthorText>\n          <DateText>{dateToDisplay}</DateText>\n        </RowView>\n      </ColumnView>\n    </RootView>\n  );\n};\n\nexport default NewsItem;\n\nconst ST = PropTypes.string.isRequired;\n\nNewsItem.propTypes = {\n  item: PropTypes.shape({\n    title: ST,\n    author: PropTypes.string,\n    url: ST,\n    urlToImage: ST,\n    publishedAt: ST,\n  }),\n  style: PropTypes.string,\n};\n\nconst RootView = styled(View)`\n  flex-direction: row;\n  align-items: center;\n  border: 1px solid black;\n  padding: 12px;\n  width: 100%;\n`;\n\nconst ThumbnailImage = styled(Image)`\n  width: 85px;\n  margin-right: 12px;\n  height: 50px;\n`;\n\nconst RowView = styled(View)`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ColumnView = styled(View)`\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst Link = styled(Text)`\n  font-size: 12px;\n  margin-bottom: 5px;\n  color: blue;\n  flex-wrap: wrap;\n  flex: 1;\n`;\n\nconst AuthorText = styled(Text)`\n  font-size: 10px;\n`;\n\nconst DateText = styled(Text)`\n  font-size: 10px;\n`;\n","const apiKey = '1ce4d2efa1394b6091e5773abb201d85';\n\nconst getUrl = q =>\n  `http://newsapi.org/v2/top-headlines?q=${q}&sortBy=publishedAt&apiKey=${apiKey}`;\n\nexport default async company => {\n  const url = getUrl(company);\n  const response = await fetch(url);\n  const body = await response.json();\n\n  return body.articles;\n};\n","import React from 'react';\nimport getNews from '../../getNews';\n\nconst useNews = companyName => {\n  const [news, setNews] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isError, setIsError] = React.useState(false);\n\n  React.useEffect(() => {\n    const loadNews = async () => {\n      setNews(null);\n      setIsLoading(true);\n      try {\n        const result = await getNews(companyName);\n        setNews(result);\n        setIsLoading(false);\n      } catch (e) {\n        setIsError(true);\n      }\n      setIsLoading(false);\n    };\n\n    loadNews();\n  }, [companyName]);\n\n  return { news, isLoading, isError };\n};\n\nexport default useNews;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport View from '../View';\nimport Text from '../Text';\nimport NewsItem from './NewsItem';\nimport useNews from './useNews';\n\nconst NewsSection = ({ companyName, className }) => {\n  const { news, isLoading, isError } = useNews(companyName);\n  const renderContent = () => {\n    if (isError) {\n      return <ErrorText>Loading error</ErrorText>;\n    }\n    if (isLoading) {\n      return <LoaderText>Loading...</LoaderText>;\n    }\n    if (!news || news.length === 0) {\n      return <NoNewsText>No news for this company</NoNewsText>;\n    }\n\n    return news.map(item => <NewsItemStyled item={item} key={item.url} />);\n  };\n\n  return (\n    <RootView className={className}>\n      <HeaderText>News</HeaderText>\n      {renderContent()}\n    </RootView>\n  );\n};\n\nexport default NewsSection;\n\nNewsItem.propTypes = {\n  className: PropTypes.string,\n  style: PropTypes.object,\n  companyName: PropTypes.string.isRequired,\n};\n\nconst RootView = styled(View)`\n  flex-direction: column;\n  border: 1px solid #ccc;\n  padding: 12px;\n`;\n\nconst ErrorText = styled(Text)`\n  color: red;\n`;\n\nconst LoaderText = styled(Text)`\n  color: green;\n`;\n\nconst NoNewsText = styled(Text)`\n  color: blue;\n`;\n\nconst HeaderText = styled(Text)`\n  font-size: 16px;\n  text-decoration: underline;\n`;\n\nconst NewsItemStyled = styled(NewsItem)`\n  margin-top: 12px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Image from './Image';\nimport NewsSection from './NewsSection';\nimport View from './View';\nimport Text from './Text';\n\nconst CompanyProfile = ({ profile, className }) => {\n  const { logo, name, description } = profile;\n\n  return (\n    <RootView className={className}>\n      <Logo source={{ uri: logo }} />\n      <HeaderText>{name}</HeaderText>\n      <BodyText>{description}</BodyText>\n      <NewsSection companyName={name} />\n    </RootView>\n  );\n};\n\nexport default CompanyProfile;\n\nCompanyProfile.propTypes = {\n  profile: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    logo: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n  }).isRequired,\n  className: PropTypes.string,\n};\n\nconst RootView = styled(View)`\n  flex: 1;\n  flex-direction: column;\n  align-items: stretch;\n  padding: 12px;\n`;\n\nconst HeaderText = styled(Text)`\n  font-weight: bold;\n  font-size: 22px;\n  margin: 12px 0;\n`;\n\nconst BodyText = styled(Text)`\n  margin-bottom: 12px;\n`;\n\nconst Logo = styled(Image).attrs({resizeMode: 'contain'})`\n  width: 100%;\n  height: 100px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Text from './Text';\nimport View from './View';\n\nconst TabBar = ({ items, onSelect, selected }) => {\n  const renderItem = ({ name, id }) => (\n    <TabItem isSelected={selected === id} onPress={() => onSelect(id)} key={id}>\n      {name}\n    </TabItem>\n  );\n\n  return <RootView>{items.map(renderItem)}</RootView>;\n};\n\nexport default TabBar;\n\nTabBar.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n  onSelect: PropTypes.func.isRequired,\n  selected: PropTypes.string.isRequired,\n};\n\nconst RootView = styled(View)`\n  height: 50px;\n  align-self: stretch;flex-direction: row;\n`;\n\nconst decideBackgroundColor = props => (props.isSelected ? '#ccc' : '#f1f1f1');\n\nconst TabItem = styled(Text)`\n  flex: 1;\n  text-align: center;\n  padding: 5px;\n  border: 1px solid #ccc;\n  background-color: ${decideBackgroundColor};\n  &:hover {\n    background-color: #ddd;\n  }\n`;\n","import React, { useState } from 'react';\nimport SafeAreaView from 'react-native-safe-area-view';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport styled from 'styled-components';\nimport { CompanyProfile, TabBar, View } from './components';\nimport companiesData from './companies';\n\nconst companyList = Object.values(companiesData);\n\nfunction App() {\n  const [selectedCompany, setSelectedCompany] = useState(companyList[0].id);\n\n  return (\n    <SafeAreaProvider>\n      <SafeAreaView style={{ flex: 1 }}>\n        <RootView>\n          <TabBar\n            items={companyList}\n            onSelect={setSelectedCompany}\n            selected={selectedCompany}\n          />\n          <CompanyProfile profile={companyList[selectedCompany]} />\n        </RootView>\n      </SafeAreaView>\n    </SafeAreaProvider>\n  );\n}\n\nexport default App;\n\nconst RootView = styled(View)`\n  flex: 1;\n  flex-direction: column;\n  align-items: stretch;\n  \n`;\n","import React from 'react';\n\nexport { default } from './src/App'\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/company-profile-expo/expo-service-worker.js', { scope: '/company-profile-expo/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}